version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=supersecretkey123  # Clave unificada
    depends_on:
      - auth-service
      - document-service
      - financial-service
      - ocr-service
    networks:
      - app-network

  auth-service:
    build: ./auth-service
    environment:
      - NODE_ENV=development
      - JWT_SECRET=supersecretkey123  # MISMA clave
      - DATABASE_URL=postgres://user:password@postgres:5432/auth_db
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  document-service:
    build: ./document-service
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/document_db
      - JWT_SECRET=supersecretkey123  # MISMA clave
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - EXTERNAL_MINIO_HOST=minio:9000  # CAMBIAR ESTA LÍNEA
    depends_on:
      - postgres
      - minio
    networks:
      - app-network

  financial-service:
    build: ./financial-service
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/financial_db
      - JWT_SECRET=supersecretkey123  # MISMA clave
    depends_on:
      - postgres
    networks:
      - app-network

  ocr-service:
    build: ./ocr-service
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:13
    restart: always
    ports:
    - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  minio:
    image: minio/minio
    ports:
      - "9001:9001"  # Puerto para consola web
      - "9000:9000"  # Puerto para API - AGREGAR ESTA LÍNEA
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network

volumes:
  postgres_data:
  minio_data:

networks:
  app-network:
    driver: bridge