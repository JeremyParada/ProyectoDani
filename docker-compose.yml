services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your_jwt_secret
      - PORT=3000
      - HOST=0.0.0.0
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  auth-service:
    build: ./auth-service
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your_jwt_secret
      - DATABASE_URL=postgres://user:password@postgres:5432/auth_db
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 30s  # Increase interval
      timeout: 10s   # Increase timeout
      retries: 10
      start_period: 90s  # Increase start period significantly
    networks:
      - app-network
    restart: always

  document-service:
    build: ./document-service
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your_jwt_secret
      - DATABASE_URL=postgres://user:password@postgres:5432/document_db
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    ports:
      - "3002:3002"  # For direct testing
    networks:
      - app-network

  financial-service:
    build: ./financial-service
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your_jwt_secret
      - DATABASE_URL=postgres://user:password@postgres:5432/financial_db
    ports:
      - "3003:3003"  # For direct testing
    networks:
      - app-network

  ocr-service:
    build: ./ocr-service
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379
    ports:
      - "8000:8000"  # For direct testing
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - app-network
    restart: always

  minio:
    image: minio/minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  postgres_data:
  minio_data:
  redis_data:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16